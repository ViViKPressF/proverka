let currentLevel = 1;
const totalLevels = 4;

function updateProgress() {
    const progress = ((currentLevel - 1) / totalLevels) * 100;
    document.getElementById('progress').style.width = progress + '%';
}

function showLevel(level) {
    document.querySelectorAll('.challenge').forEach(challenge => {
        challenge.classList.remove('active');
    });
    document.getElementById(`challenge-${level}`).classList.add('active');
}

function checkHTML() {
    const input = document.getElementById('html-input').value;
    const feedback = document.getElementById('html-feedback');
    const preview = document.getElementById('html-preview');
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä
    preview.innerHTML = input;
    
    if (input.includes('<h1>') && input.includes('</h1>') && 
        (input.includes('<p>') || input.includes('<div>'))) {
        feedback.className = 'feedback success';
        feedback.innerHTML = '‚úÖ –û—Ç–ª–∏—á–Ω–æ! –¢—ã —Å–æ–∑–¥–∞–ª –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É HTML!';
        setTimeout(() => {
            currentLevel = 2;
            showLevel(2);
            updateProgress();
        }, 1500);
    } else {
        feedback.className = 'feedback error';
        feedback.innerHTML = '‚ùå –ü–æ—á—Ç–∏! –£–±–µ–¥–∏—Å—å, —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—à—å —Ç–µ–≥–∏ h1 –∏ p/div';
    }
}

function checkCSS() {
    const select = document.getElementById('css-select');
    const feedback = document.getElementById('css-feedback');
    const preview = document.getElementById('css-preview');
    
    // –ü—Ä–∏–º–µ–Ω—è–µ–º —Å—Ç–∏–ª–∏ –∫ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä—É
    if (select.value) {
        preview.querySelector('h1').style = select.value;
    }
    
    if (select.value === "color: blue; text-align: center;") {
        feedback.className = 'feedback success';
        feedback.innerHTML = 'üé® –ü—Ä–µ–∫—Ä–∞—Å–Ω–æ! –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å—Ç–∞–ª–∞ –≤—ã–≥–ª—è–¥–µ—Ç—å –Ω–∞–º–Ω–æ–≥–æ –ª—É—á—à–µ!';
        setTimeout(() => {
            currentLevel = 3;
            showLevel(3);
            updateProgress();
        }, 1500);
    } else {
        feedback.className = 'feedback error';
        feedback.innerHTML = 'üé® –ù–µ —Å–æ–≤—Å–µ–º... –ü–æ–ø—Ä–æ–±—É–π —Å–¥–µ–ª–∞—Ç—å –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å–∏–Ω–∏–º –∏ –≤—ã—Ä–æ–≤–Ω—è—Ç—å –ø–æ —Ü–µ–Ω—Ç—Ä—É';
    }
}

function checkJS() {
    const input = document.getElementById('js-input').value.toLowerCase();
    const feedback = document.getElementById('js-feedback');
    const resultDiv = document.getElementById('js-result');
    const button = document.getElementById('myButton');
    
    // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    const newButton = button.cloneNode(true);
    button.parentNode.replaceChild(newButton, button);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
    newButton.addEventListener('click', function() {
        if (input.includes('alert')) {
            alert('–û—Ç–ª–∏—á–Ω–æ! JavaScript —Ä–∞–±–æ—Ç–∞–µ—Ç!');
        } else if (input.includes('–∏–∑–º–µ–Ω–∏—Ç—å') || input.includes('change')) {
            resultDiv.innerHTML = '<p>–¢–µ–∫—Å—Ç –∏–∑–º–µ–Ω–µ–Ω —Å –ø–æ–º–æ—â—å—é JavaScript!</p>';
        } else {
            resultDiv.innerHTML = '<p>–ß—Ç–æ-—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ!</p>';
        }
    });
    
    if (input.includes('alert') || input.includes('–∏–∑–º–µ–Ω–∏—Ç—å') || input.includes('change')) {
        feedback.className = 'feedback success';
        feedback.innerHTML = '‚ö° –£–¥–∏–≤–∏—Ç–µ–ª—å–Ω–æ! JavaScript –æ–∂–∏–≤–∏–ª —Ç–≤–æ—é —Å—Ç—Ä–∞–Ω–∏—Ü—É!';
        setTimeout(() => {
            currentLevel = 4;
            showLevel(4);
            updateProgress();
        }, 1500);
    } else {
        feedback.className = 'feedback error';
        feedback.innerHTML = '‚ö° –ò–Ω—Ç–µ—Ä–µ—Å–Ω–∞—è –∏–¥–µ—è, –Ω–æ –ø–æ–ø—Ä–æ–±—É–π –¥–æ–±–∞–≤–∏—Ç—å –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ –æ–∫–Ω–æ –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã';
    }
}

function checkCombined() {
    const feedback = document.getElementById('combined-feedback');
    const preview = document.getElementById('combined-preview');
    
    // –°–æ–∑–¥–∞–µ–º —Ä–∞–±–æ—Ç–∞—é—â–∏–π —Å—á–µ—Ç—á–∏–∫ –≤ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–µ
    preview.innerHTML = `
        <div class="counter">
            <button id="decrease">-</button>
            <span id="count">0</span>
            <button id="increase">+</button>
        </div>
        <style>
            .counter {
                display: flex;
                gap: 10px;
                align-items: center;
                font-size: 1.5em;
            }
            .counter button {
                width: 40px;
                height: 40px;
                font-size: 1.2em;
                display: flex;
                align-items: center;
                justify-content: center;
            }
        </style>
    `;
    
    let count = 0;
    const countElement = preview.querySelector('#count');
    const decreaseBtn = preview.querySelector('#decrease');
    const increaseBtn = preview.querySelector('#increase');
    
    decreaseBtn.addEventListener('click', function() {
        count--;
        countElement.textContent = count;
    });
    
    increaseBtn.addEventListener('click', function() {
        count++;
        countElement.textContent = count;
    });
    
    feedback.className = 'feedback success';
    feedback.innerHTML = 'üîó –ò–¥–µ–∞–ª—å–Ω–æ! –¢—ã —Å–æ–∑–¥–∞–ª –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç!';
    
    setTimeout(() => {
        document.getElementById('completion').style.display = 'block';
        document.querySelectorAll('.challenge').forEach(challenge => {
            challenge.style.display = 'none';
        });
    }, 2000);
}

function showHint(level) {
    const feedback = document.getElementById('combined-feedback');
    feedback.className = 'feedback success';
    feedback.innerHTML = 'üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞: –ù—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –∫–Ω–æ–ø–æ–∫, –∫–æ—Ç–æ—Ä—ã–µ –∏–∑–º–µ–Ω—è—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é count –∏ –æ–±–Ω–æ–≤–ª—è—é—Ç —Ç–µ–∫—Å—Ç –≤ span';
}

function restartQuest() {
    currentLevel = 1;
    updateProgress();
    showLevel(1);
    document.getElementById('completion').style.display = 'none';
    
    // –°–±—Ä–æ—Å –≤—Å–µ—Ö –ø–æ–ª–µ–π –≤–≤–æ–¥–∞
    document.getElementById('html-input').value = '';
    document.getElementById('css-select').selectedIndex = 0;
    document.getElementById('js-input').value = '';
    
    // –û—á–∏—Å—Ç–∫–∞ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤
    document.getElementById('html-preview').innerHTML = '';
    document.getElementById('css-preview').querySelector('h1').style = '';
    document.getElementById('js-result').innerHTML = '';
    document.getElementById('combined-preview').innerHTML = '';
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
updateProgress();
